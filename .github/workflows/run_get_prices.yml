name: Run get_prices.py and Auto-Commit Changes

on:
  schedule:
    - cron: "0 */6 * * *" # 每六小时执行
  push:
    branches:
      - master # 当 master 分支有推送时触发
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 授予写入仓库的权限

jobs:
  update-prices:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code (master)
        uses: actions/checkout@v3
        with:
          persist-credentials: true # 确保后续步骤可以使用凭据
          fetch-depth: 0 # 获取完整的历史记录
          ref: master # 检出master分支获取代码

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12" # 使用你需要的 Python 版本

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # 如果有依赖项的话

      - name: Run get_ownedby.py
        run: |
          for i in {1..3}; do
            python src/get_ownedby.py && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Run sync_ownedby.py
        env:
          ONEHUB_URL: ${{ secrets.ONEHUB_URL }}
          ONEHUB_ADMIN_TOKEN: ${{ secrets.ONEHUB_ADMIN_TOKEN }}
        run: |
          for i in {1..3}; do
            python src/sync_ownedby.py --source_json ownedby.json --manual_json ownedby_manual.json && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Run get siliconflow prices
        env:
          SILICONFLOW_API_KEY: ${{ secrets.SILICONFLOW_API_KEY }}
        run: |
          for i in {1..3}; do
            python src/get_siliconflow_prices.py && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Run get openrouter prices
        run: |
          for i in {1..3}; do
            python src/get_openrouter_prices.py && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Run merge_prices.py
        run: |
          for i in {1..3}; do
            python src/merge_prices.py && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Run sync_pricing.py
        env:
          ONEHUB_URL: ${{ secrets.ONEHUB_URL }}
          ONEHUB_ADMIN_TOKEN: ${{ secrets.ONEHUB_ADMIN_TOKEN }}
        run: |
          for i in {1..3}; do
            python src/sync_pricing.py && break || sleep 5
          done
          [ $i -eq 3 ] && exit 1 || exit 0

      - name: Set up Git Configuration
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Prepare Commit
        run: |
          commit_messages=("Update prices: ⏰" "Refresh data: 🔄" "Renew JSON files: 🌟" "Revise prices: 📝")
          random_msg=${commit_messages[$RANDOM % ${#commit_messages[@]}]}

          git add oneapi_prices.json siliconflow_prices.json ownedby.json onehub_only_prices.json openrouter_prices.json
          git commit -m "$random_msg - $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit."

      - name: Copy Results to Temporary Directory
        run: |
          mkdir -p temp_results
          cp oneapi_prices.json siliconflow_prices.json ownedby.json onehub_only_prices.json openrouter_prices.json temp_results/

      - name: Checkout or Create Orphan Branch (prices)
        run: |
          git checkout --orphan prices
          git rm -rf .

      - name: Sync Remote Branch
        run: |
          git fetch origin prices || echo "Remote branch prices does not exist."
          git reset --hard origin/prices || echo "No remote branch to reset."

      - name: Copy Results to Target Branch
        run: |
          cp -r temp_results/* .

      - name: Prepare Commit for Target Branch
        run: |
          commit_messages=("Update results: ⏰" "Refresh results: 🔄" "Renew results: 🌟" "Revise results: 📝")
          random_msg=${commit_messages[$RANDOM % ${#commit_messages[@]}]}

          git add oneapi_prices.json siliconflow_prices.json ownedby.json onehub_only_prices.json openrouter_prices.json
          git commit -m "$random_msg - $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit."

      - name: Push Changes to Target Branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: prices

      - name: Trigger Pages Deployment
        run: |
          echo "Triggering GitHub Pages deployment workflow..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-pages.yml/dispatches \
            -d '{"ref":"website"}'
          echo "Pages deployment workflow triggered!"
